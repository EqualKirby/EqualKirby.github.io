{"categories":[{"title":"LeetCode","uri":"https://equalkirby.github.io/categories/leetcode/"}],"posts":[{"content":"感覺該來開始刷題了\n總之這個是第一篇吧\n題目連結 想法 這題其實蠻簡單的，簡單來說就是用 linked list 進行兩個數字的加法\n預先給的格式其實也已經很貼心的把數字倒序，所以就利用 carry flag 從後面往前加就好\n實作時比較需要注意的幾點：\n 題目有保證兩個傳進來的 pointer 非空，但兩個 linked list 可能不等長 即使兩個 pointer 都跑到 nullptr 了，carry flag還有可能沒跑完 對於第一個要被創出來的 Node 要怎樣寫比較統一  底下的 code 算是盡量比較統一的寫法\n存了一個 dummy node 在 stack 上，實際上要傳回去第一個 node 是 head.next\n實際上我用 seq[] 只是因為我很討厭打一樣的 code 打兩次而已\n因為我沒辦法一次寫過要修修改改，所以有兩個地方出現一樣的 code 我很容易打錯QQ\n時間複雜度 顯而易見的 $\\mathcal{O}(n)$\n空間複雜度 顯而易見的 $\\mathcal{O}(n)$\n/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ #include\u0026lt;algorithm\u0026gt; class Solution { public: ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) { using namespace std; auto head = ListNode(); auto prev = \u0026amp;head; auto carry = 0; ListNode* seq[] = {l1, l2}; while(any_of(begin(seq), end(seq), [](auto p){return p;}) || carry) { auto sum = carry; for(auto\u0026amp; p : seq) { if(p) { sum += p-\u0026gt;val; p = p-\u0026gt;next; } } carry = sum / 10; auto cur = new ListNode(sum % 10); prev-\u0026gt;next = cur; prev = cur; } return head.next; } }; ","id":0,"section":"posts","summary":"\u003cp\u003e感覺該來開始刷題了\u003cbr\u003e\n總之這個是第一篇吧\u003c/p\u003e","tags":null,"title":"Add Two Numbers","uri":"https://equalkirby.github.io/2021/03/add-two-numbers/","year":"2021"},{"content":"#include\u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026quot;Hellow World\u0026quot; \u0026lt;\u0026lt; endl; }  $\\forall x \\in X$\n","id":1,"section":"posts","summary":"#include\u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026quot;Hellow World\u0026quot; \u0026lt;\u0026lt; endl; }  $\\forall x \\in X$","tags":null,"title":"First Post","uri":"https://equalkirby.github.io/2021/01/first-post/","year":"2021"}],"tags":[]}